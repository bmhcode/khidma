# Generated by Django 4.1.7 on 2024-05-26 23:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='name of the category', help_text='name of catygory', max_length=50, verbose_name='name')),
                ('slug', models.SlugField(blank=True, help_text='Unique value for category page URL, created from name.', null=True, unique=True)),
                ('image', models.ImageField(blank=True, default='category.jpg', null=True, upload_to='Category images/')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Title of the post', help_text='Title of post', max_length=100, verbose_name='title')),
                ('address', models.CharField(default='My address', help_text='Address of post', max_length=200, verbose_name='Address')),
                ('ville', models.IntegerField(choices=[(1, 'Adrar'), (2, 'Chelef'), (3, 'Agout'), (4, 'Oum Bouaghi'), (5, 'Batna'), (6, 'Bejaia'), (7, 'Beskra'), (8, 'Bechar'), (9, 'Blida'), (10, 'Bouira')], verbose_name='Ville')),
                ('email_address', models.EmailField(blank=True, default='yourmail@gmail.com', max_length=255, null=True, verbose_name='Email address')),
                ('phone', models.CharField(max_length=20, verbose_name='phone')),
                ('description', models.TextField(blank=True, default='Informations about your post', null=True, verbose_name='Description')),
                ('slug', models.SlugField(blank=True, help_text='Unique value for post page URL, created from name.', null=True, unique=True)),
                ('image', models.ImageField(blank=True, default='post.jpg', upload_to='post images/', verbose_name='Image')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Posted at')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('rating', models.IntegerField(choices=[(0, ''), (1, '*....'), (2, '**...'), (3, '***..'), (4, '****.'), (5, '*****')], default=0)),
                ('stars', models.IntegerField(default=0, verbose_name='Nomber of Stars')),
                ('stars_date', models.DateTimeField(blank=True, null=True, verbose_name='Stars date')),
                ('stars_days', models.IntegerField(default=0, verbose_name='Stars days')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='category', to='app.category', verbose_name='Category')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Posts',
                'db_table': 'postes',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.post')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'wishlists',
                'db_table': 'wishlists',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='PostReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField()),
                ('rating', models.IntegerField(choices=[(0, ''), (1, '*....'), (2, '**...'), (3, '***..'), (4, '****.'), (5, '*****')], default=None)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.post')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Post Reviews',
                'db_table': 'poste reviews',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='PostImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='default_image.jpg', upload_to='post-images')),
                ('description', models.CharField(blank=True, max_length=64, null=True, verbose_name='Description')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.post', verbose_name='post')),
            ],
            options={
                'verbose_name_plural': 'Post images',
            },
        ),
    ]
